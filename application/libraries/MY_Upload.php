<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class MY_Upload extends CI_Upload
{
	protected array $uploadConfig;

	function data($index = NULL)
	{
		$data = parent::data($index);
		$data['file_link'] = get_filepath_from_link($data['full_path']);
		return $data;
	}

	public function initialize(array $config = array(), $reset = TRUE)
	{
		$this->uploadConfig = $config;

		return parent::initialize($config, $reset); // TODO: Change the autogenerated stub
	}

	public function set_error($msg, $log_level = 'error')
	{
		if(in_array($msg, ['upload_file_exceeds_limit','upload_file_exceeds_form_limit','upload_invalid_filesize','upload_invalid_filetype'])) {
			$this->_CI->lang->load('upload', config_item('language'));

			$line = $replace = '';
			switch ($msg)
			{
				case 'upload_file_exceeds_limit' :
					// 서버에 설정된 업로드 용량을 초과하였습니다.
					$line = 'allowed_maximum_upload_limit';
					$replace = get_file_size(UPLOAD_MAX_FILESIZE, true);
					break;
				case 'upload_file_exceeds_form_limit' :
					// 설정된 업로드 용량을 초과하였습니다.
					$line = 'allowed_maximum_upload_limit';
					$replace = get_file_size(POST_MAX_SIZE, true);
					break;
				case 'upload_invalid_filesize' :
					// 허용된 용량을 초과하였습니다.
					$line = 'allowed_maximum_upload_limit';
					$replace = get_file_size((int)$this->uploadConfig['max_size']*1024, true);
					break;
				case 'upload_invalid_filetype' :
					// 허용된 파일 확장자가 아닙니다.
					$line = 'allowed_upload_type';
					$replace = str_replace('|', ', ', $this->uploadConfig['allowed_types']);
					break;
			}

			$msg = ($this->_CI->lang->line($msg) === FALSE) ? $msg : $this->_CI->lang->line($msg);
			$append = $this->_CI->lang->nline($line, $replace, false);
			if($append) $msg .= "\n".$append;
		}

		return parent::set_error($msg, $log_level);
	}
}
